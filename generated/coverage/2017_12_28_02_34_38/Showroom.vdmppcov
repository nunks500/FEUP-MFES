class Showroom
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
		private startups: set of startup :={};
		private DayOfStart: Types`Date;
		private DayOfEnd: Types`Date;
operations
-- TODO Define operations here
		public Showroom:  Types`Date * Types`Date ==> Showroom
	Showroom(n2,n3) == (DayOfStart := n2; DayOfEnd := n3; return self)
	post DayOfStart = n2 and DayOfEnd = n3;
	
	public addStartupToShowroom: startup ==> ()
	addStartupToShowroom(n1) == startups := startups union {n1}
	pre n1 not in set startups;
	
	public getStartups: () ==> set of startup
	getStartups() == return startups;
	
	public getStartupByName: seq of char ==> startup
	getStartupByName(n1) == (
	
				for all companies in set startups do(
				if companies.getName() = n1
				then return companies
				else
				return false;
				);
	);
	
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Showroom